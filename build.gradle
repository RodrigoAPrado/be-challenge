buildscript {
    ext {
        dependencyManagementPluginVersion = "1.0.6.RELEASE"
        kotlinVersion = "1.3.41"
        kotlinTestVersion = '3.3.0'
        springBootVersion = "2.1.7.RELEASE"
        springCloudVersion = "Greenwich.RELEASE"
        jacksonEncoderVersion = "9.3.1"
        jacksonXmlVersion = "2.10.0"
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}


apply plugin: "idea"
apply plugin: "application"
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

mainClassName = "be.challenge.ApplicationKt"

bootJar {
    baseName = 'gs-spring-boot'
    version = '0.1.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
repositories {
    mavenLocal()
    jcenter()
}

dependencies {

    implementation("com.google.guava:guava:28.2-jre")

    // Spring
    implementation("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}") {
        exclude group: 'io.micrometer', module: 'micrometer-core'
    }

    // Kotlin
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonXmlVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    // Test
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter:${property("jUnitVersion")}")
    testImplementation("io.mockk:mockk:1.9")

    testImplementation("io.kotlintest:kotlintest-extensions-spring:${kotlinTestVersion}")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

bootRun {
    systemProperties = System.properties
}

test {
    failFast = false
    useJUnitPlatform {
        excludeTags 'integration'
    }
    testLogging {
        events("passed", "skipped", "failed")
    }
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

